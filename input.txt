# Text-to-Speech Script Documentation

## Overview

This Python script provides a text-to-speech (TTS) solution that reads text from an input file, converts it to speech using the Microsoft Edge TTS engine, and plays the audio while displaying synchronized text output. The script processes the text in chunks, allowing for smoother playback of long texts.

## Features

- Converts text to speech using Microsoft Edge TTS
- Plays audio with synchronized text display
- Processes text in chunks for better handling of long texts
- Supports various voices and languages (configurable)

## Requirements

- Python 3.7+
- pygame
- edge-tts

## Installation

1. Ensure you have Python 3.7 or later installed on your system.
2. Install the required packages:

```bash
pip install pygame edge-tts
```

3. Clone or download the script to your local machine.

## Usage

1. Prepare an input text file named `input.txt` in the same directory as the script.
2. Run the script:

```bash
python text_to_speech_script.py
```

3. The script will process the text, generate audio files, and play them while displaying synchronized text in the console.

## Configuration

You can modify the following constants in the script to customize its behavior:

- `INPUT_FILE`: Name of the input text file (default: "input.txt")
- `OUTPUT_DIRECTORY`: Directory to store generated audio files (default: "output_files")
- `SPECIAL_CHARACTERS`: Characters used to split the text into chunks (default: ".!?;")
- `VOICE`: TTS voice to use (default: "en-GB-SoniaNeural")

## Main Functions

### `main()`

The entry point of the script. It reads the input file, sets up the output directory, and initiates the text-to-speech process.

### `talk(text, output_file)`

Orchestrates the entire text-to-speech and playback process. It splits the text into chunks, generates audio for each chunk, and manages the playback queue.

### `generate_tts(text, audio_file, text_file)`

Generates TTS audio and word boundary files for a given text chunk using the Microsoft Edge TTS engine.

### `play_audio(audio_file, text_file)`

Plays the generated audio file and displays synchronized text in the console.

### `process_chunk(chunk, output_file, chunk_text_file, play_queue)`

Processes a single text chunk by generating TTS audio and adding it to the playback queue.

### `play_audio_worker(play_queue)`

A worker function that manages the audio playback queue, ensuring that audio files are played in the correct order.

## Error Handling

The script includes error handling for common issues such as missing input files or TTS generation errors. Error messages will be displayed in the console if any issues occur during execution.

## Limitations

- The script currently supports only one TTS voice at a time.
- Audio playback relies on the pygame library, which may have platform-specific limitations.

## Contributing

Feel free to fork this project, submit issues, or provide pull requests to improve the script.

## License

[Specify the license under which this script is released, e.g., MIT, GPL, etc.]